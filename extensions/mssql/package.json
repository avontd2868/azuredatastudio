{
  "name": "mssql",
  "version": "0.1.0",
  "publisher": "Microsoft",
  "aiKey": "AIF-5574968e-856d-40d2-af67-c89a14e76412",
  "activationEvents": [
    "*"
  ],
  "engines": {
    "vscode": "*"
  },
  "main": "./out/main",
  "extensionDependencies": [
    "vscode.sql"
  ],
  "scripts": {
    "compile": "gulp compile-extension:mssql-client",
    "update-grammar": "node ../../build/npm/update-grammar.js Microsoft/vscode-mssql syntaxes/SQL.plist ./syntaxes/sql.tmLanguage.json"
  },
  "scripts": {
    "build": "gulp build",
    "compile": "gulp compile",
    "watch": "gulp watch",
    "postinstall": "node ./node_modules/vscode/bin/install && node ./node_modules/sqlops/bin/install"
  },
  "dependencies": {
    "clipboardy": "^1.2.3",
    "dataprotocol-client": "github:Microsoft/sqlops-dataprotocolclient#0.2.15",
    "opener": "^1.4.3",
    "service-downloader": "github:anthonydresser/service-downloader#0.1.5",
    "stream-meter": "^1.0.4",
    "uri-js": "^4.2.2",
    "vscode-extension-telemetry": "^0.0.15",
    "vscode-nls": "2.0.2",
    "webhdfs": "^1.1.1"
  },
  "devDependencies": {},
  "contributes": {
    "languages": [
      {
        "id": "sql",
        "extensions": [
          ".sql"
        ],
        "aliases": [
          "SQL"
        ]
      },
      {
        "id": "jupyter-notebook",
        "extensions": [
          ".ipynb"
        ],
        "aliases": [
          "Jupyter Notebook",
          "IPython Notebook",
          "ipy"
        ]
      }
    ],
    "outputChannels": [
      "MSSQL",
      "%title.sqlServer2019Preview%"
    ],
    "snippets": [
      {
        "language": "sql",
        "path": "./snippets/mssql.json"
      }
    ],
    "configuration": [
      {
        "type": "object",
        "title": "MSSQL configuration",
        "properties": {
          "mssql.query.displayBitAsNumber": {
            "type": "boolean",
            "default": true,
            "description": "Should BIT columns be displayed as numbers (1 or 0)? If false, BIT columns will be displayed as 'true' or 'false'"
          },
          "mssql.format.alignColumnDefinitionsInColumns": {
            "type": "boolean",
            "description": "Should column definitions be aligned?",
            "default": false
          },
          "mssql.format.datatypeCasing": {
            "type": "string",
            "description": "Should data types be formatted as UPPERCASE, lowercase, or none (not formatted)",
            "default": "none",
            "enum": [
              "none",
              "uppercase",
              "lowercase"
            ]
          },
          "mssql.format.keywordCasing": {
            "type": "string",
            "description": "Should keywords be formatted as UPPERCASE, lowercase, or none (not formatted)",
            "default": "none",
            "enum": [
              "none",
              "uppercase",
              "lowercase"
            ]
          },
          "mssql.format.placeCommasBeforeNextStatement": {
            "type": "boolean",
            "description": "should commas be placed at the beginning of each statement in a list e.g. ', mycolumn2' instead of at the end e.g. 'mycolumn1,'",
            "default": false
          },
          "mssql.format.placeSelectStatementReferencesOnNewLine": {
            "type": "boolean",
            "description": "Should references to objects in a select statements be split into separate lines? E.g. for 'SELECT C1, C2 FROM T1' both C1 and C2 will be on separate lines",
            "default": false
          },
          "mssql.logDebugInfo": {
            "type": "boolean",
            "default": false,
            "description": "[Optional] Log debug output to the console (View -> Output) and then select appropriate output channel from the dropdown"
          },
          "mssql.tracingLevel": {
            "type": "string",
            "description": "[Optional] Log level for backend services. Azure Data Studio generates a file name every time it starts and if the file already exists the logs entries are appended to that file. For cleanup of old log files see logRetentionMinutes and logFilesRemovalLimit settings. The default tracingLevel does not log much. Changing verbosity could lead to extensive logging and disk space requirements for the logs. Error includes Critical, Warning includes Error, Information includes Warning and Verbose includes Information",
            "default": "Critical",
            "enum": [
              "All",
              "Off",
              "Critical",
              "Error",
              "Warning",
              "Information",
              "Verbose"
            ]
          },
          "mssql.logRetentionMinutes": {
            "type": "number",
            "default": 10080,
            "description": "Number of minutes to retain log files for backend services. Default is 1 week."
          },
          "mssql.logFilesRemovalLimit": {
            "type": "number",
            "default": 100,
            "description": "Maximum number of old files to remove upon startup that have expired mssql.logRetentionMinutes. Files that do not get cleaned up due to this limitation get cleaned up next time Azure Data Studio starts up."
          },
          "ignorePlatformWarning": {
            "type": "boolean",
            "description": "[Optional] Do not show unsupported platform warnings",
            "default": false
          }
        }
      },
      {
        "type": "object",
        "title": "%title.sqlServer2019Preview%",
        "properties": {
          "dataManagement.logDebugInfo": {
            "type": "boolean",
            "default": false,
            "description": "%config.logDebugInfo%"
          }
        }
      }
    ],
    "commands": [
      {
        "command": "hdfs.uploadFiles",
        "title": "%hdfs.uploadFiles%"
      },
      {
        "command": "hdfs.mkdir",
        "title": "%hdfs.mkdir%"
      },
      {
        "command": "hdfs.deleteFiles",
        "title": "%hdfs.deleteFiles%"
      },
      {
        "command": "hdfs.previewFile",
        "title": "%hdfs.previewFile%"
      },
      {
        "command": "hdfs.saveFile",
        "title": "%hdfs.saveFile%"
      },
      {
        "command": "hdfs.copyPath",
        "title": "%hdfs.copyPath%"
      },
      {
        "command": "jupyter.cmd.analyzeNotebook",
        "title": "%title.analyzeJupyterNotebook%"
      },
      {
        "command": "jupyter.task.newNotebook",
        "title": "%title.newJupyterNotebook%",
        "icon": {
          "dark": "resources/dark/new_notebook_inverse.svg",
          "light": "resources/light/new_notebook.svg"
        }
      },
      {
        "command": "jupyter.task.openNotebook",
        "title": "%title.openJupyterNotebook%",
        "icon": {
          "dark": "resources/dark/open_notebook_inverse.svg",
          "light": "resources/light/open_notebook.svg"
        }
      },
      {
        "command": "jupyter.cmd.newNotebook",
        "title": "%title.newJupyterNotebook%",
        "icon": {
          "dark": "resources/dark/new_notebook_inverse.svg",
          "light": "resources/light/new_notebook.svg"
        }
      },
      {
        "command": "virtualizedatawizard.task.open",
        "title": "%title.openVirtualizeDataWizard%",
        "icon": {
          "dark": "resources/dark/polybase_inverse.svg",
          "light": "resources/light/polybase.svg"
        }
      },
      {
        "command": "virtualizedatawizard.cmd.open",
        "title": "%title.openVirtualizeDataWizard%",
        "icon": {
          "dark": "resources/dark/polybase_inverse.svg",
          "light": "resources/light/polybase.svg"
        }
      },
      {
        "command": "tablefromfilewizard.cmd.open",
        "title": "%title.openTableFromFileWizard%"
      },
      {
        "command": "livy.cmd.submitSparkJob",
        "title": "%title.submitSparkJob%"
      },
      {
        "command": "livy.task.submitSparkJob",
        "title": "%title.newSparkJob%",
        "icon": {
          "dark": "resources/dark/new_spark_job_inverse.svg",
          "light": "resources/light/new_spark_job.svg"
        }
      },
      {
        "command": "livy.task.openSparkHistory",
        "title": "%title.openSparkHistory%",
        "icon": {
          "dark": "resources/dark/new_spark_job_inverse.svg",
          "light": "resources/light/new_spark_job.svg"
        }
      },
      {
        "command": "livy.task.openYarnHistory",
        "title": "%title.openYarnHistory%",
        "icon": {
          "dark": "resources/light/hadoop.svg",
          "light": "resources/light/hadoop.svg"
        }
      },
      {
        "command": "jupyter.cmd.installPackages",
        "title": "%title.installPackages%",
        "icon": {
          "dark": "resources/dark/manage_inverse.svg",
          "light": "resources/light/manage.svg"
        }
      },
      {
        "command": "livy.cmd.submitFileToSparkJob",
        "title": "%title.submitSparkJob%"
      },
      {
        "command": "jupyter.reinstallDependencies",
        "title": "%title.reinstallNotebookDependencies%"
      },
      {
        "command": "jupyter.cmd.configurePython",
        "title": "%title.configurePython%"
      }
    ],
    "keybindings": [
      {
        "command": "jupyter.cmd.newNotebook",
        "key": "shift+ctrl+N"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "hdfs.uploadFiles",
          "when": "false"
        },
        {
          "command": "hdfs.mkdir",
          "when": "false"
        },
        {
          "command": "hdfs.deleteFiles",
          "when": "false"
        },
        {
          "command": "hdfs.previewFile",
          "when": "false"
        },
        {
          "command": "hdfs.saveFile",
          "when": "false"
        },
        {
          "command": "hdfs.copyPath",
          "when": "false"
        },
        {
          "command": "virtualizedatawizard.cmd.open",
          "when": "wizardservice:enabled"
        },
        {
          "command": "virtualizedatawizard.task.open",
          "when": "false"
        },
        {
          "command": "tablefromfilewizard.cmd.open",
          "when": "false"
        },
        {
          "command": "jupyter.task.newNotebook",
          "when": "false"
        },
        {
          "command": "jupyter.cmd.newNotebook",
          "when": "false"
        },
        {
          "command": "jupyter.cmd.analyzeNotebook",
          "when": "false"
        },
        {
          "command": "jupyter.task.openNotebook",
          "when": "false"
        },
        {
          "command": "livy.cmd.submitFileToSparkJob",
          "when": "false"
        },
        {
          "command": "livy.task.submitSparkJob",
          "when": "false"
        },
        {
          "command": "jupyter.cmd.installPackages",
          "when": "false"
        }
      ],
      "objectExplorer/item/context": [
        {
          "command": "virtualizedatawizard.cmd.open",
          "when": "connectionProvider == MSSQL && nodeType && nodeType == Database",
          "group": "1data@1"
        },
        {
          "command": "tablefromfilewizard.cmd.open",
          "when": "nodeType =~ /(hdfs:file|hdfs:folder)/",
          "group": "1data@2"
        },
        {
          "command": "jupyter.cmd.newNotebook",
          "when": "connectionProvider == HADOOP_KNOX && nodeType && nodeType == Server",
          "group": "1root@1"
        },
        {
          "command": "livy.cmd.submitSparkJob",
          "when": "connectionProvider == HADOOP_KNOX && nodeType && nodeType == Server",
          "group": "1root@1"
        },
        {
          "command": "hdfs.uploadFiles",
          "when": "nodeType=~/^hdfs/ && nodeType != hdfs:message && nodeType != hdfs:file",
          "group": "1hdfs@1"
        },
        {
          "command": "hdfs.mkdir",
          "when": "nodeType=~/^hdfs/ && nodeType != hdfs:message && nodeType != hdfs:file",
          "group": "1hdfs@1"
        },
        {
          "command": "hdfs.saveFile",
          "when": "nodeType == hdfs:file",
          "group": "1hdfs@1"
        },
        {
          "command": "hdfs.previewFile",
          "when": "nodeType == hdfs:file",
          "group": "1hdfs@2"
        },
        {
          "command": "hdfs.copyPath",
          "when": "nodeType=~/^hdfs/ && nodeType != hdfs:connection && nodeType != hdfs:message",
          "group": "1hdfs@3"
        },
        {
          "command": "hdfs.deleteFiles",
          "when": "nodeType=~/^hdfs/ && viewItem != hdfs:connection && nodeType != hdfs:message",
          "group": "1hdfs@4"
        },
        {
          "command": "jupyter.cmd.analyzeNotebook",
          "when": "nodeType=~/^hdfs/ && nodeLabel=~/[^\\s]+(\\.(csv|tsv|txt))$/ && nodeType == hdfs:file",
          "group": "1notebook@1"
        },
        {
          "command": "livy.cmd.submitFileToSparkJob",
          "when": "nodeType == hdfs:file && nodeSubType == hdfs:spark",
          "group": "1hdfs@5"
        }
      ],
      "notebook/toolbar": [
        {
          "command": "jupyter.cmd.installPackages"
        }
      ]
    },
    "dashboard": {
      "provider": "MSSQL",
      "flavors": [
        {
          "flavor": "on_prem",
          "condition": {
            "field": "isCloud",
            "operator": "!=",
            "value": true
          },
          "databaseProperties": [
            {
              "displayName": "Recovery Model",
              "value": "recoveryModel"
            },
            {
              "displayName": "Last Database Backup",
              "value": "lastBackupDate",
              "ignore": [
                "1/1/0001 12:00:00 AM"
              ]
            },
            {
              "displayName": "Last Log Backup",
              "value": "lastLogBackupDate",
              "ignore": [
                "1/1/0001 12:00:00 AM"
              ]
            },
            {
              "displayName": "Compatibility Level",
              "value": "compatibilityLevel"
            },
            {
              "displayName": "Owner",
              "value": "owner"
            }
          ],
          "serverProperties": [
            {
              "displayName": "Version",
              "value": "serverVersion"
            },
            {
              "displayName": "Edition",
              "value": "serverEdition"
            },
            {
              "displayName": "Computer Name",
              "value": "machineName"
            },
            {
              "displayName": "OS Version",
              "value": "osVersion"
            }
          ]
        },
        {
          "flavor": "cloud",
          "condition": {
            "field": "isCloud",
            "operator": "==",
            "value": true
          },
          "databaseProperties": [
            {
              "displayName": "Edition",
              "value": "azureEdition"
            },
            {
              "displayName": "Pricing Tier",
              "value": "serviceLevelObjective"
            },
            {
              "displayName": "Compatibility Level",
              "value": "compatibilityLevel"
            },
            {
              "displayName": "Owner",
              "value": "owner"
            }
          ],
          "serverProperties": [
            {
              "displayName": "Version",
              "value": "serverVersion"
            },
            {
              "displayName": "Type",
              "value": "serverEdition"
            }
          ]
        }
      ]
    },
    "connectionProvider": [
      {
        "providerId": "MSSQL",
        "displayName": "Microsoft SQL Server",
        "connectionOptions": [
          {
            "specialValueType": "connectionName",
            "isIdentity": true,
            "name": "connectionName",
            "displayName": "Name (optional)",
            "description": "Custom name of the connection",
            "groupName": "Source",
            "valueType": "string",
            "defaultValue": null,
            "objectType": null,
            "categoryValues": null,
            "isRequired": false,
            "isArray": false
          },
          {
            "specialValueType": "serverName",
            "isIdentity": true,
            "name": "server",
            "displayName": "Server",
            "description": "Name of the SQL Server instance",
            "groupName": "Source",
            "valueType": "string",
            "defaultValue": null,
            "objectType": null,
            "categoryValues": null,
            "isRequired": true,
            "isArray": false
          },
          {
            "specialValueType": "databaseName",
            "isIdentity": true,
            "name": "database",
            "displayName": "Database",
            "description": "The name of the initial catalog or database int the data source",
            "groupName": "Source",
            "valueType": "string",
            "defaultValue": null,
            "objectType": null,
            "categoryValues": null,
            "isRequired": false,
            "isArray": false
          },
          {
            "specialValueType": "authType",
            "isIdentity": true,
            "name": "authenticationType",
            "displayName": "Authentication type",
            "description": "Specifies the method of authenticating with SQL Server",
            "groupName": "Security",
            "valueType": "category",
            "defaultValue": null,
            "objectType": null,
            "categoryValues": [
              {
                "displayName": "SQL Login",
                "name": "SqlLogin"
              },
              {
                "displayName": "Windows Authentication",
                "name": "Integrated"
              },
              {
                "displayName": "Azure Active Directory - Universal with MFA support",
                "name": "AzureMFA"
              }
            ],
            "isRequired": true,
            "isArray": false
          },
          {
            "specialValueType": "userName",
            "isIdentity": true,
            "name": "user",
            "displayName": "User name",
            "description": "Indicates the user ID to be used when connecting to the data source",
            "groupName": "Security",
            "valueType": "string",
            "defaultValue": null,
            "objectType": null,
            "categoryValues": null,
            "isRequired": true,
            "isArray": false
          },
          {
            "specialValueType": "password",
            "isIdentity": true,
            "name": "password",
            "displayName": "Password",
            "description": "Indicates the password to be used when connecting to the data source",
            "groupName": "Security",
            "valueType": "password",
            "defaultValue": null,
            "objectType": null,
            "categoryValues": null,
            "isRequired": true,
            "isArray": false
          },
          {
            "specialValueType": null,
            "isIdentity": false,
            "name": "applicationIntent",
            "displayName": "Application intent",
            "description": "Declares the application workload type when connecting to a server",
            "groupName": "Initialization",
            "valueType": "category",
            "defaultValue": null,
            "objectType": null,
            "categoryValues": [
              {
                "displayName": "ReadWrite",
                "name": "ReadWrite"
              },
              {
                "displayName": "ReadOnly",
                "name": "ReadOnly"
              }
            ],
            "isRequired": false,
            "isArray": false
          },
          {
            "specialValueType": null,
            "isIdentity": false,
            "name": "asynchronousProcessing",
            "displayName": "Asynchronous processing",
            "description": "When true, enables usage of the Asynchronous functionality in the .Net Framework Data Provider",
            "groupName": "Initialization",
            "valueType": "boolean",
            "defaultValue": null,
            "objectType": null,
            "categoryValues": null,
            "isRequired": false,
            "isArray": false
          },
          {
            "specialValueType": null,
            "isIdentity": false,
            "name": "connectTimeout",
            "displayName": "Connect timeout",
            "description": "The length of time (in seconds) to wait for a connection to the server before terminating the attempt and generating an error",
            "groupName": "Initialization",
            "valueType": "number",
            "defaultValue": "15",
            "objectType": null,
            "categoryValues": null,
            "isRequired": false,
            "isArray": false
          },
          {
            "specialValueType": null,
            "isIdentity": false,
            "name": "currentLanguage",
            "displayName": "Current language",
            "description": "The SQL Server language record name",
            "groupName": "Initialization",
            "valueType": "string",
            "defaultValue": null,
            "objectType": null,
            "categoryValues": null,
            "isRequired": false,
            "isArray": false
          },
          {
            "specialValueType": null,
            "isIdentity": false,
            "name": "columnEncryptionSetting",
            "displayName": "Column encryption",
            "description": "Default column encryption setting for all the commands on the connection",
            "groupName": "Security",
            "valueType": "category",
            "defaultValue": null,
            "objectType": null,
            "categoryValues": [
              {
                "displayName": null,
                "name": "Disabled"
              },
              {
                "displayName": null,
                "name": "Enabled"
              }
            ],
            "isRequired": false,
            "isArray": false
          },
          {
            "specialValueType": null,
            "isIdentity": false,
            "name": "encrypt",
            "displayName": "Encrypt",
            "description": "When true, SQL Server uses SSL encryption for all data sent between the client and server if the servers has a certificate installed",
            "groupName": "Security",
            "valueType": "boolean",
            "defaultValue": null,
            "objectType": null,
            "categoryValues": null,
            "isRequired": false,
            "isArray": false
          },
          {
            "specialValueType": null,
            "isIdentity": false,
            "name": "persistSecurityInfo",
            "displayName": "Persist security info",
            "description": "When false, security-sensitive information, such as the password, is not returned as part of the connection",
            "groupName": "Security",
            "valueType": "boolean",
            "defaultValue": null,
            "objectType": null,
            "categoryValues": null,
            "isRequired": false,
            "isArray": false
          },
          {
            "specialValueType": null,
            "isIdentity": false,
            "name": "trustServerCertificate",
            "displayName": "Trust server certificate",
            "description": "When true (and encrypt=true), SQL Server uses SSL encryption for all data sent between the client and server without validating the server certificate",
            "groupName": "Security",
            "valueType": "boolean",
            "defaultValue": null,
            "objectType": null,
            "categoryValues": null,
            "isRequired": false,
            "isArray": false
          },
          {
            "specialValueType": null,
            "isIdentity": false,
            "name": "attachedDBFileName",
            "displayName": "Attached DB file name",
            "description": "The name of the primary file, including the full path name, of an attachable database",
            "groupName": "Source",
            "valueType": "string",
            "defaultValue": null,
            "objectType": null,
            "categoryValues": null,
            "isRequired": false,
            "isArray": false
          },
          {
            "specialValueType": null,
            "isIdentity": false,
            "name": "contextConnection",
            "displayName": "Context connection",
            "description": "When true, indicates the connection should be from the SQL server context. Available only when running in the SQL Server process",
            "groupName": "Source",
            "valueType": "boolean",
            "defaultValue": null,
            "objectType": null,
            "categoryValues": null,
            "isRequired": false,
            "isArray": false
          },
          {
            "specialValueType": null,
            "isIdentity": false,
            "name": "port",
            "displayName": "Port",
            "description": null,
            "groupName": null,
            "valueType": "number",
            "defaultValue": null,
            "objectType": null,
            "categoryValues": null,
            "isRequired": false,
            "isArray": false
          },
          {
            "specialValueType": null,
            "isIdentity": false,
            "name": "connectRetryCount",
            "displayName": "Connect retry count",
            "description": "Number of attempts to restore connection",
            "groupName": "Connection Resiliency",
            "valueType": "number",
            "defaultValue": "1",
            "objectType": null,
            "categoryValues": null,
            "isRequired": false,
            "isArray": false
          },
          {
            "specialValueType": null,
            "isIdentity": false,
            "name": "connectRetryInterval",
            "displayName": "Connect retry interval",
            "description": "Delay between attempts to restore connection",
            "groupName": "Connection Resiliency",
            "valueType": "number",
            "defaultValue": "10",
            "objectType": null,
            "categoryValues": null,
            "isRequired": false,
            "isArray": false
          },
          {
            "specialValueType": "appName",
            "isIdentity": false,
            "name": "applicationName",
            "displayName": "Application name",
            "description": "The name of the application",
            "groupName": "Context",
            "valueType": "string",
            "defaultValue": null,
            "objectType": null,
            "categoryValues": null,
            "isRequired": false,
            "isArray": false
          },
          {
            "specialValueType": null,
            "isIdentity": false,
            "name": "workstationId",
            "displayName": "Workstation Id",
            "description": "The name of the workstation connecting to SQL Server",
            "groupName": "Context",
            "valueType": "string",
            "defaultValue": null,
            "objectType": null,
            "categoryValues": null,
            "isRequired": false,
            "isArray": false
          },
          {
            "specialValueType": null,
            "isIdentity": false,
            "name": "pooling",
            "displayName": "Pooling",
            "description": "When true, the connection object is drawn from the appropriate pool, or if necessary, is created and added to the appropriate pool",
            "groupName": "Pooling",
            "valueType": "boolean",
            "defaultValue": null,
            "objectType": null,
            "categoryValues": null,
            "isRequired": false,
            "isArray": false
          },
          {
            "specialValueType": null,
            "isIdentity": false,
            "name": "maxPoolSize",
            "displayName": "Max pool size",
            "description": "The maximum number of connections allowed in the pool",
            "groupName": "Pooling",
            "valueType": "number",
            "defaultValue": null,
            "objectType": null,
            "categoryValues": null,
            "isRequired": false,
            "isArray": false
          },
          {
            "specialValueType": null,
            "isIdentity": false,
            "name": "minPoolSize",
            "displayName": "Min pool size",
            "description": "The minimum number of connections allowed in the pool",
            "groupName": "Pooling",
            "valueType": "number",
            "defaultValue": null,
            "objectType": null,
            "categoryValues": null,
            "isRequired": false,
            "isArray": false
          },
          {
            "specialValueType": null,
            "isIdentity": false,
            "name": "loadBalanceTimeout",
            "displayName": "Load balance timeout",
            "description": "The minimum amount of time (in seconds) for this connection to live in the pool before being destroyed",
            "groupName": "Pooling",
            "valueType": "number",
            "defaultValue": null,
            "objectType": null,
            "categoryValues": null,
            "isRequired": false,
            "isArray": false
          },
          {
            "specialValueType": null,
            "isIdentity": false,
            "name": "replication",
            "displayName": "Replication",
            "description": "Used by SQL Server in Replication",
            "groupName": "Replication",
            "valueType": "boolean",
            "defaultValue": null,
            "objectType": null,
            "categoryValues": null,
            "isRequired": false,
            "isArray": false
          },
          {
            "specialValueType": null,
            "isIdentity": false,
            "name": "attachDbFilename",
            "displayName": "Attach DB filename",
            "description": null,
            "groupName": null,
            "valueType": "string",
            "defaultValue": null,
            "objectType": null,
            "categoryValues": null,
            "isRequired": false,
            "isArray": false
          },
          {
            "specialValueType": null,
            "isIdentity": false,
            "name": "failoverPartner",
            "displayName": "Failover partner",
            "description": "The name or network address of the instance of SQL Server that acts as a failover partner",
            "groupName": " Source",
            "valueType": "string",
            "defaultValue": null,
            "objectType": null,
            "categoryValues": null,
            "isRequired": false,
            "isArray": false
          },
          {
            "specialValueType": null,
            "isIdentity": false,
            "name": "multiSubnetFailover",
            "displayName": "Multi subnet failover",
            "description": null,
            "groupName": null,
            "valueType": "boolean",
            "defaultValue": null,
            "objectType": null,
            "categoryValues": null,
            "isRequired": false,
            "isArray": false
          },
          {
            "specialValueType": null,
            "isIdentity": false,
            "name": "multipleActiveResultSets",
            "displayName": "Multiple active result sets",
            "description": "When true, multiple result sets can be returned and read from one connection",
            "groupName": "Advanced",
            "valueType": "boolean",
            "defaultValue": null,
            "objectType": null,
            "categoryValues": null,
            "isRequired": false,
            "isArray": false
          },
          {
            "specialValueType": null,
            "isIdentity": false,
            "name": "packetSize",
            "displayName": "Packet size",
            "description": "Size in bytes of the network packets used to communicate with an instance of SQL Server",
            "groupName": "Advanced",
            "valueType": "number",
            "defaultValue": null,
            "objectType": null,
            "categoryValues": null,
            "isRequired": false,
            "isArray": false
          },
          {
            "specialValueType": null,
            "isIdentity": false,
            "name": "typeSystemVersion",
            "displayName": "Type system version",
            "description": "Indicates which server type system then provider will expose through the DataReader",
            "groupName": "Advanced",
            "valueType": "string",
            "defaultValue": null,
            "objectType": null,
            "categoryValues": null,
            "isRequired": false,
            "isArray": false
          }
        ]
      },
      {
        "protocolVersion": "1.0",
        "providerName": "HADOOP_KNOX",
        "providerId": "HADOOP_KNOX",
        "displayName": "%connection.displayname%",
        "connectionOptions": [
          {
            "specialValueType": "connectionName",
            "isIdentity": true,
            "name": "connectionName",
            "displayName": "Name (optional)",
            "description": "Custom name of the connection",
            "groupName": "Source",
            "valueType": "string",
            "defaultValue": null,
            "objectType": null,
            "categoryValues": null,
            "isRequired": false,
            "isArray": false
          },
          {
            "name": "host",
            "displayName": "%connection.host%",
            "description": "%connection.host.description%",
            "valueType": "string",
            "specialValueType": "serverName",
            "isIdentity": true,
            "isRequired": true,
            "groupName": "Source"
          },
          {
            "name": "user",
            "displayName": "%connection.user%",
            "description": "%connection.user.description%",
            "valueType": "string",
            "specialValueType": "userName",
            "isIdentity": true,
            "isRequired": true,
            "groupName": "Security"
          },
          {
            "name": "password",
            "displayName": "%connection.password%",
            "description": "%connection.password.description%",
            "valueType": "password",
            "specialValueType": "password",
            "isIdentity": false,
            "isRequired": true,
            "groupName": "Security"
          },
          {
            "name": "clustername",
            "displayName": "%connection.clustername%",
            "description": "%connection.clustername.description%",
            "valueType": "string",
            "specialValueType": "databaseName",
            "isIdentity": false,
            "isRequired": false,
            "groupName": "Source",
            "defaultValue": "default"
          },
          {
            "name": "knoxport",
            "displayName": "%connection.knoxport%",
            "description": "%connection.knoxport.description%",
            "valueType": "string",
            "isIdentity": true,
            "isRequired": true,
            "groupName": "Server",
            "defaultValue": "30443"
          },
          {
            "name": "connecttimeout",
            "displayName": "%connection.connectTimeout%",
            "description": "%connection.connectTimeout.description%",
            "valueType": "number",
            "groupName": "Client",
            "defaultValue": "15"
          },
          {
            "name": "sslverification",
            "displayName": "%connection.sslverification%",
            "description": "%connection.sslverification.description%",
            "valueType": "boolean",
            "groupName": "SSL",
            "defaultValue": true
          }
        ]
      }
    ]
  },
  "dependencies": {
    "@jupyterlab/services": "^3.0.3",
    "bytes": "^3.0.0",
    "clipboardy": "^1.2.3",
    "dataprotocol-client": "github:Microsoft/sqlops-dataprotocolclient#0.2.10",
    "decompress": "^4.2.0",
    "error-ex": "^1.3.1",
    "figures": "^2.0.0",
    "fs-extra": "^5.0.0",
    "highlight.js": "9.5.0",
    "jsonc-parser": "^2.0.0",
    "markdown-it": "^8.4.0",
    "markdown-it-named-headers": "0.0.4",
    "nice-try": "^1.0.5",
    "opener": "^1.4.3",
    "request-promise": "^4.2.2",
    "sanitize-html": "^1.19.0",
    "semver": "^5.5.1",
    "service-downloader": "github:anthonydresser/service-downloader#0.1.2",
    "stream-meter": "^1.0.4",
    "uri-js": "^4.2.2",
    "vscode-extension-telemetry": "0.0.22",
    "vscode-nls": "2.0.2",
    "webhdfs": "^1.1.1",
    "which": "^1.3.0",
    "ws": "^6.0.0",
    "yallist": "^3.0.2"
  },
  "devDependencies": {
    "@types/decompress": "^4.2.3",
    "@types/fs-extra": "^5.0.1",
    "@types/highlight.js": "9.1.10",
    "@types/lodash.throttle": "^4.1.4",
    "@types/markdown-it": "0.0.2",
    "@types/node": "^7.0.43",
    "@types/react": "^16.4.13",
    "@types/react-dom": "^16.0.7",
    "@types/request": "^2.48.1",
    "@types/sanitize-html": "^1.18.0",
    "@types/which": "^1.3.1",
    "ansi_up": "^3.0.0",
    "child-process-promise": "^2.2.1",
    "copy-webpack-plugin": "^4.5.1",
    "css-loader": "^1.0.0",
    "decache": "^4.1.0",
    "del": "^3.0.0",
    "gulp": "^4.0.0",
    "gulp-color": "0.0.1",
    "gulp-decompress": "2.0.2",
    "gulp-download": "0.0.1",
    "gulp-inline-css": "^3.3.0",
    "gulp-istanbul-report": "0.0.1",
    "gulp-json-editor": "^2.2.1",
    "gulp-remote-src": "^0.4.3",
    "gulp-sourcemaps": "^2.6.4",
    "gulp-tslint": "^8.1.3",
    "gulp-typescript": "^3.2.4",
    "istanbul": "^0.4.5",
    "lodash.throttle": "^4.1.1",
    "mocha": "5.1.1",
    "pm-mocha-jenkins-reporter": "^0.2.6",
    "react": "^16.4.2",
    "react-dom": "^16.4.2",
    "react-resize-detector": "^3.1.1",
    "remap-istanbul": "^0.11.1",
    "requirejs": "^2.3.5",
    "should": "^13.2.1",
    "sqlops": "github:anthonydresser/sqlops-extension-sqlops",
    "style-loader": "^0.23.0",
    "temp-write": "^3.4.0",
    "ts-loader": "^5.0.0",
    "tslint": "^5.9.1",
    "typemoq": "^2.1.0",
    "typescript": "^2.7.2",
    "url-parse": "^1.4.3",
    "vsce": "^1.4.0",
    "vscode": "^1.1.10",
    "vscodetestcover": "^1.0.1",
    "vso-node-api": "6.1.2-preview",
    "webpack": "^4.17.2",
    "webpack-bundle-analyzer": "^2.13.1",
    "webpack-cli": "^3.1.0",
    "webpack-stream": "^5.1.1",
    "xmldom": "^0.1.27",
    "xpath.js": "^1.1.0"
  },
  "resolutions": {
    "event-stream": "3.3.4",
    "vscode-jsonrpc": "3.5.0",
    "vscode-languageclient": "3.5.0",
    "vscode-languageserver-protocol": "3.5.0",
    "vscode-languageserver-types": "3.5.0"
  },
  "enableProposedApi": true
}